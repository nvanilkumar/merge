<<<<<<< HEAD
<?php
include_once("cGlobali.php");

class cEventSignup
{
	private $TableNm = "EventSignup";

	public $Id = 0;
	public $UserID = 0;
	public $EventId = 0;
	public $Qty = 0;
	public $Fees = 0.0;
	public $Ccharge = 0.0;
	public $STax = 0.0;
	public $DAmount = 0.0;
        public $referralDAmount = 0.00;
	public $CurrencyId = 0;
	public $Name = "";
	public $EMail = "";
	public $Phone = "";
	public $Address = "";
	public $CityId = 0;
	public $StateId = 0;
	public $CountryId = 0;
	public $PIN = "";
	public $PromotionCode = "";
	public $PromoCodeId = 0;
	public $PaymentModeId = 0;
	public $PaymentTransId = "";
	public $SignupDt;
        public $source;
        public $userPointsId;
        public $referralCode;
        public $ucode;

	//----------------------------------------------------------------------------------------------------

	public function __construct($lId, $lUserID, $iEventId, $iQty, $dFees, $dCcharge, $dSTax, $dDAmount,$totalReferralDiscAmt, $byCurrencyId, $sName, $sEMail, $sPhone,
	$sAddress, $lCityId, $lStateId, $byCountryId, $sPIN, $sPromotionCode, $iPromoCodeId, $byPaymentModeId, $sPaymentTransId, $dtSignupDt,$sSource,$userPointsId,$referralCode,$ucode)
	{
		$this->Id =  $lId;
		$this->UserID =  $lUserID;
		$this->EventId =  $iEventId;
		$this->Qty =  $iQty;
		$this->Fees =  $dFees;
		$this->Ccharge =  $dCcharge;
		$this->STax =  $dSTax;
		$this->DAmount =  $dDAmount;
                $this->referralDAmount = $totalReferralDiscAmt;
		$this->CurrencyId =  $byCurrencyId;
		$this->Name = $sName;
		$this->EMail = $sEMail;
		$this->Phone = $sPhone;
		$this->Address = $sAddress;
		$this->CityId = $lCityId ;
		$this->StateId =  $lStateId;
		$this->CountryId =  $byCountryId;
		$this->PIN = $sPIN;
		$this->PromotionCode = $sPromotionCode;
		$this->PromoCodeId= $iPromoCodeId;
		$this->PaymentModeId = $byPaymentModeId;
		$this->PaymentTransId = $sPaymentTransId;
		$this->SignupDt = $dtSignupDt;
                $this->source=$sSource;
                $this->userPointsId = $userPointsId;
                $this->referralCode = $referralCode;
                $this->ucode=$ucode;
	}

	//----------------------------------------------------------------------------------------------------

	public function Save()
	{
		$Success = FALSE;

		try
		{
			$Globali=new cGlobali();
			//$Globali->dbconn = new mysqli($Global->DBServerNameOnly, $Global->DBUserName,$Global->DBPassword,$Global->DBIniCatalog,$Global->portNumber);
			//$Globali->dbconn->connect();


			if ($Globali->dbconn->errno > 0)
			{
				throw new Exception("Could not connect to DB. Error: " . $Globali->dbconn->error);
			}

			if (!$Globali->dbconn)
			{
				throw new Exception("Could not connect to DB");
			}

			if ($this->Id > 0)		//Edited Record: Update
			{
				$EditedRecord = TRUE;
			}
			else
			{
				$EditedRecord = FALSE;
			}

			$myQuery = " UserID = ?, EventId = ?, Qty = ?, Fees = ?, Ccharge = ?, STax = ?, DAmount = ?,referralDAmount = ?, CurrencyId = ?,
					Name = ?, EMail = ?, Phone = ?, Address = ?, CityId = ?, StateId = ?, CountryId = ?, PIN = ?,
					PromotionCode = ?, PromoCodeId = ?, PaymentModeId = ?, PaymentTransId = ?, SignupDt = ?, source = ?, userpointsid = ?, referralcode = ?, ucode = ?";
				
			if ($EditedRecord)
			{
				$myQuery = "UPDATE " . $this->TableNm . " SET " . $myQuery . " WHERE Id = ?";
			}
			else	//New Record: Insert
			{
				$myQuery = "INSERT INTO " . $this->TableNm . " SET " . $myQuery;
			}

			$stmt = $Globali->dbconn->stmt_init();    // Create a statement object

			$Success = $stmt->prepare($myQuery);    // Prepare the statement for execution
			if (! $Success) throw new Exception("Statement couldn't be prepared. Error: " . $Globali->dbconn->error);


			if ($EditedRecord)
			{
				$Success = $stmt->bind_param("iiidddddissssiiissiississss", $this->UserID , $this->EventId , $this->Qty , $this->Fees , $this->Ccharge,$this->STax,$this->DAmount,$this->referralDAmount,$this->CurrencyId , $this->Name, $this->EMail, $this->Phone, $this->Address, $this->CityId , $this->StateId , $this->CountryId , $this->PIN, $this->PromotionCode, $this->PromoCodeId, $this->PaymentModeId, $this->PaymentTransId, $this->SignupDt,   $this->source,$this->userPointsId,$this->referralCode,$this->ucode,$this->Id);    // Bind the parameters
			}
			else
			{
			
				$Success = $stmt->bind_param("iiidddddissssiiissiissssss", $this->UserID , $this->EventId , $this->Qty , $this->Fees , $this->Ccharge,$this->STax,$this->DAmount,$this->referralDAmount, $this->CurrencyId , $this->Name, $this->EMail, $this->Phone, $this->Address, $this->CityId , $this->StateId , $this->CountryId , $this->PIN, $this->PromotionCode, $this->PromoCodeId, $this->PaymentModeId, $this->PaymentTransId, $this->SignupDt, $this->source,$this->userPointsId,$this->referralCode,$this->ucode);
		  // Bind the parameters
			}

			if (! $Success) throw new Exception("Parameters couldn't be bound. Error: " . $Globali->dbconn->error);


			$Success = $stmt->execute();		//Execute Statement
			if (! $Success) throw new Exception("Statement couldn't be Executed. Error: " . $Globali->dbconn->error);

			$AffectedRows = $stmt->affected_rows;
			if ($AffectedRows > 0)
			{
				if (! $EditedRecord)	$this->Id = $Globali->dbconn->insert_id;
			}
			else
			{
				$this->Id = 0;
			}

			$Globali->dbconn->close();
			$stmt->close();

			return $this->Id;
		}
		catch (Exception $Ex)
		{
			throw $Ex;
		}
	}		//Save

	//---------------------------------------------------------------------------------------------------------------

	public function Load()
	{
		$Success = FALSE;

		try
		{
			$Globali=new cGlobali();
			//$Globali->dbconn = new mysqli($Global->DBServerNameOnly, $Global->DBUserName,$Global->DBPassword,$Global->DBIniCatalog,$Global->portNumber);
			//$Globali->dbconn->connect();


			if ($Globali->dbconn->errno > 0)
			{
				throw new Exception("Could not connect to DB. Error: " . $Globali->dbconn->error);
			}

			if (!$Globali->dbconn)
			{
				throw new Exception("Could not connect to DB");
			}

			//echo $this->Id;

			$myQuery="SELECT Id, UserID, EventId, Qty, Fees, Ccharge, STax, DAmount, CurrencyId, Name, EMail, Phone, Address, CityId, StateId, CountryId, PIN, PromotionCode, PromoCodeId, PaymentModeId, PaymentTransId, SignupDt, source  FROM " . $this->TableNm . " WHERE Id = ?";
			$stmt = $Globali->dbconn->stmt_init();    // Create a statement object

			$Success = $stmt->prepare($myQuery);    // Prepare the statement for execution
			if (! $Success) throw new Exception("Statement couldn't be prepared. Error: " . $Globali->dbconn->error);

			$Success = $stmt->bind_param("i", $this->Id);    // Bind the parameters
			if (! $Success) throw new Exception("Parameters couldn't be bound. Error: " . $Globali->dbconn->error);

			$Success = $stmt->execute();		//Execute Statement
			if (! $Success) throw new Exception("Statement couldn't be Executed. Error: " . $Globali->dbconn->error);

			$Success = $stmt->bind_result($this->Id , $this->UserID , $this->EventId , $this->Qty , $this->Fees , $this->Ccharge, $this->STax, $this->DAmount, $this->CurrencyId , $this->Name, $this->EMail, $this->Phone, $this->Address, $this->CityId , $this->StateId , $this->CountryId , $this->PIN, $this->PromotionCode, $this->PromoCodeId, $this->PaymentModeId, $this->PaymentTransId, $this->SignupDt, $this->source);	// Bind the result parameters

			if ($stmt->fetch())		//Fetch values actually into bound fields of the result
			{
				$Success = TRUE;
			}
			else
			{
				$Success = FALSE;
			}

			$Globali->dbconn->close();
			$stmt->close();

			return $Success;
		}
		catch (Exception $Ex)
		{
			throw $Ex;
		}
	}

	//----------------------------------------------------------------------------------------------------

	public function Delete()
	{
		$Success = FALSE;

		try
		{
			$Globali=new cGlobali();
			//$Globali->dbconn = new mysqli($Global->DBServerNameOnly, $Global->DBUserName,$Global->DBPassword,$Global->DBIniCatalog,$Global->portNumber);
			//$Globali->dbconn->connect();


			if ($Globali->dbconn->errno > 0)
			{
				throw new Exception("Could not connect to DB. Error: " . $Globali->dbconn->error);
			}

			if (!$Globali->dbconn)
			{
				throw new Exception("Could not connect to DB");
			}

			$myQuery="DELETE FROM " . $this->TableNm . " WHERE Id = ?";

			$stmt = $Globali->dbconn->stmt_init();    // Create a statement object

			$Success = $stmt->prepare($myQuery);    // Prepare the statement for execution
			if (! $Success) throw new Exception("Statement couldn't be prepared. Error: " . $Globali->dbconn->error);


			$Success = $stmt->bind_param("i", $this->Id);    // Bind the parameters
			if (! $Success) throw new Exception("Parameters couldn't be bound. Error: " . $Globali->dbconn->error);


			$Success = $stmt->execute();		//Execute Statement
			if (! $Success) throw new Exception("Statement couldn't be Executed. Error: " . $Globali->dbconn->error);

			$AffectedRows = $stmt->affected_rows;
			if ($AffectedRows > 0)
			{
				$Success = TRUE;
			}
			else
			{
				$Success = FALSE;
			}

			$Globali->dbconn->close();
			$stmt->close();

			return $Success;
		}
		catch (Exception $Ex)
		{
			throw $Ex;
		}
	}		//Delete
       
        //function to fetch different transactions count
            function getTransactionsByEventId($eventid)
            {
                    $Globali=new cGlobali();

//                 $sqlcount="select s.Id,estd.NumOfTickets as Qty,if(estd.TicketAmt=0,0,((estd.TicketAmt+s.STax)/estd.NumOfTickets)) as Fees,s.PaymentModeId,s.PaymentTransId,s.PaymentGateway,s.eChecked,s.PaymentStatus
//                                from
//            eventsignupticketdetails as estd 
//            Inner Join EventSignup s on s.Id=estd.eventsignupid
//             where  s.EventId='".$Globali->dbconn->real_escape_string($eventid)."'";
                    $sqlcount=" select es.id 'EventSIgnupId',                          
       es.SignupDt 'Signup Date',es.PaymentGateway,
              CASE WHEN paymentgateway='CashonDelivery' THEN 'Cash on Delivery'
                   WHEN PaymentModeId=2 and PaymentTransId='A1' THEN ch.chqno
          ELSE es.PaymentTransId 
          END 'PaymentTransId', 
       es.PromotionCode 'PromotionCode',
       CASE es.eChecked WHEN 'Verified' THEN 'Successful' 
          ELSE 'Pending' 
          End 'PaymentStatus',
       a.name 'Name' ,
	   a.Id 'attendeeId',	   
es.CityId,es.StateId,
       a.field1,
       a.field2,
       a.field3,
       a.field4,
       estd.NumOfTickets as Qty,
       a.Email 'Email', es.Fees,es.PaymentModeId,
       a.company 'Company',
       a.Phone 'Phone', '' Mobile,
       IF(es.Id>137214,IF(estd.TicketAmt=0,0,((estd.TicketAmt+estd.ServiceTax-estd.Discount-estd.BulkDiscount-estd.ReferralDiscount)/estd.NumOfTickets)),IF(estd.TicketAmt=0,0,(es.fees - (es.Ccharge/es.Qty)))) 'Paid' ,
t.name,(estd.TicketAmt/estd.NumOfTickets) 'Amount'      
FROM Attendees as a 
            Inner Join EventSignup as es on a.EventSignupId=es.Id
            Inner Join eventsignupticketdetails estd on a.eventsignupid=estd.eventsignupid
            Inner Join tickets t on t.id=estd.ticketid 
            Left Outer Join ChqPmnts ch on es.id=ch.eventsignupid
            
    WHERE  es.EventId= '".$Globali->dbconn->real_escape_string($eventid)."'
        and ((es.paymentgateway='CashonDelivery') or es.paymenttransid!='A1' or (es. PaymentModeId=2 and PaymentTransId='A1' and es.echecked='Verified')   or es.Fees=0)
        and es.eChecked!='Canceled'
        and es.eChecked!='Refunded'
        and a.ticketid=estd.ticketid
        
     order by es.id desc";
                    $ResCount = $Globali->SelectQuery($sqlcount);
                    //print_r($ResCount);
                    $totCount=count($ResCount);
                    $codc=0;$cardc=0;$freec=0;$incc=0;$totc=0;
                    for($i=0;$i<$totCount;$i++)
                    {
//                            if($ResCount[$i]['PaymentTransId']=='A1' && $ResCount[$i]['PaymentGateway']=='CashonDelivery' && $ResCount[$i]['PaymentModeId']==2 && $ResCount[$i]['eChecked']!='Canceled')
//                            $codc=$codc+$ResCount[$i]['Qty'];
//                            elseif($ResCount[$i]['PaymentModeId']==1 && $ResCount[$i]['PaymentTransId']!='A1' && $ResCount[$i]['Fees']!=0)
//                            $cardc=$cardc+$ResCount[$i]['Qty'];
//                            elseif($ResCount[$i]['Fees']==0 && $ResCount[$i]['PaymentStatus']=='Successful Transaction')
//                            $freec=$freec+$ResCount[$i]['Qty'];
//                            else		
//                            $incc=$incc+$ResCount[$i]['Qty'];	
                        //$list_row['PaymentGateway'] != 'CashonDelivery' && $list_row['PaymentModeId'] != 2 
                        if ($ResCount[$i]['PaymentModeId'] == 2 && $ResCount[$i]['PaymentGateway'] == 'CashonDelivery' && $ResCount[$i]['Paid'] != 0)
                            $codc=$codc+1;
                        else if($ResCount[$i]['Paid'] != 0  && $ResCount[$i]['PaymentGateway'] == 'EBS' && $ResCount[$i]['PaymentModeId'] == 1) {
                            $cardc=$cardc+1;
                        }
                        else if($ResCount[$i]['Paid'] == 0)
                            $freec=$freec+1;
                    }
                    $totc=$freec+$cardc+$codc;
                    $transCountArr=array('card'=>$cardc,'cod'=>$codc,'free'=>$freec,'all'=>$totc,'incomplete'=>$incc);
                    return $transCountArr;
            }
            
            //function to fetch Incomplete transactions By event id
            function getIncompleteTransactionsByEventId($eventid)
            {
                    $Globali=new cGlobali();
					
					
					$sqlcount = "SELECT s.Id
FROM EventSignup As s
	Inner Join events As e on s.EventId=e.Id
	Inner Join currencies as c on s.CurrencyId=c.Id
	Inner Join eventsignupticketdetails As estd on s.id=estd.eventsignupId
WHERE   ((s.PaymentModeId=1 and s.PaymentTransId='A1') or s.PaymentModeId!=2 ) and s.Fees!=0 
and EventId='".$Globali->dbconn->real_escape_string($eventid)."'
and s.EMail not in (SELECT DISTINCT EMail FROM EventSignup WHERE 1 and ((PaymentModeId=1 and PaymentTransId!='A1') or PaymentModeId=2 ) AND EventId='".$Globali->dbconn->real_escape_string($eventid)."' 
and DATE(SignupDt)=DATE(s.SignupDt)) GROUP BY s.Email,DATE(s.SignupDt),s.EventId,estd.ticketid ORDER BY s.Id DESC ";


                    /*echo $sqlcount="SELECT count( s.Id ) AS fCount,e.SalesId FROM EventSignup As s,events As e 
                               WHERE s.EventId=e.Id 
                               and ((s.PaymentModeId=1 and s.PaymentTransId='A1') or s.PaymentModeId!=2 or s.PromotionCode ='X' ) and s.Fees!=0 and s.EMail not in (SELECT EMail FROM EventSignup WHERE 1 and ((PaymentModeId=1 and PaymentTransId!='A1') or PaymentModeId=2 or PromotionCode !='X') AND EventId='".$Globali->dbconn->real_escape_string($eventid)."' ) AND EventId='".$Globali->dbconn->real_escape_string($eventid)."' AND eStatus='Open'  GROUP BY s.Id,DATE(s.SignupDt) ORDER BY s.Id DESC";*/
                    $ResCount = $Globali->SelectQuery($sqlcount);
					
					$resNewArr=array();
					foreach($ResCount as $key=>$val)
					{
						$resNewArr[]=$val['Id'];
					}
					
                    $ResCount=array_unique($resNewArr);
					return count($ResCount);
            }
            

	//---------------------------------------------------------------------------------------------------------------

}		//Class


/* >>>Useful notes>>>
 * >>Bind_Param Types (First Argument)
 • i: All INTEGER types
 • d: The DOUBLE and FLOAT types
 • b: The BLOB types
 • s: All other types (including strings)
 * <<Bind_Param Types<<
 *
 *
 */

?>
=======
<?php
include_once("cGlobali.php");

class cEventSignup
{
	private $TableNm = "EventSignup";

	public $Id = 0;
	public $UserID = 0;
	public $EventId = 0;
	public $Qty = 0;
	public $Fees = 0.0;
	public $Ccharge = 0.0;
	public $STax = 0.0;
	public $DAmount = 0.0;
        public $referralDAmount = 0.00;
	public $CurrencyId = 0;
	public $Name = "";
	public $EMail = "";
	public $Phone = "";
	public $Address = "";
	public $CityId = 0;
	public $StateId = 0;
	public $CountryId = 0;
	public $PIN = "";
	public $PromotionCode = "";
	public $PromoCodeId = 0;
	public $PaymentModeId = 0;
	public $PaymentTransId = "";
	public $SignupDt;
        public $source;
        public $userPointsId;
        public $referralCode;
        public $ucode;

	//----------------------------------------------------------------------------------------------------

	public function __construct($lId, $lUserID, $iEventId, $iQty, $dFees, $dCcharge, $dSTax, $dDAmount,$totalReferralDiscAmt, $byCurrencyId, $sName, $sEMail, $sPhone,
	$sAddress, $lCityId, $lStateId, $byCountryId, $sPIN, $sPromotionCode, $iPromoCodeId, $byPaymentModeId, $sPaymentTransId, $dtSignupDt,$sSource,$userPointsId,$referralCode,$ucode)
	{
		$this->Id =  $lId;
		$this->UserID =  $lUserID;
		$this->EventId =  $iEventId;
		$this->Qty =  $iQty;
		$this->Fees =  $dFees;
		$this->Ccharge =  $dCcharge;
		$this->STax =  $dSTax;
		$this->DAmount =  $dDAmount;
                $this->referralDAmount = $totalReferralDiscAmt;
		$this->CurrencyId =  $byCurrencyId;
		$this->Name = $sName;
		$this->EMail = $sEMail;
		$this->Phone = $sPhone;
		$this->Address = $sAddress;
		$this->CityId = $lCityId ;
		$this->StateId =  $lStateId;
		$this->CountryId =  $byCountryId;
		$this->PIN = $sPIN;
		$this->PromotionCode = $sPromotionCode;
		$this->PromoCodeId= $iPromoCodeId;
		$this->PaymentModeId = $byPaymentModeId;
		$this->PaymentTransId = $sPaymentTransId;
		$this->SignupDt = $dtSignupDt;
                $this->source=$sSource;
                $this->userPointsId = $userPointsId;
                $this->referralCode = $referralCode;
                $this->ucode=$ucode;
	}

	//----------------------------------------------------------------------------------------------------

	public function Save()
	{
		$Success = FALSE;

		try
		{
			$Globali=new cGlobali();
			//$Globali->dbconn = new mysqli($Global->DBServerNameOnly, $Global->DBUserName,$Global->DBPassword,$Global->DBIniCatalog,$Global->portNumber);
			//$Globali->dbconn->connect();


			if ($Globali->dbconn->errno > 0)
			{
				throw new Exception("Could not connect to DB. Error: " . $Globali->dbconn->error);
			}

			if (!$Globali->dbconn)
			{
				throw new Exception("Could not connect to DB");
			}

			if ($this->Id > 0)		//Edited Record: Update
			{
				$EditedRecord = TRUE;
			}
			else
			{
				$EditedRecord = FALSE;
			}

			$myQuery = " UserID = ?, EventId = ?, Qty = ?, Fees = ?, Ccharge = ?, STax = ?, DAmount = ?,referralDAmount = ?, CurrencyId = ?,
					Name = ?, EMail = ?, Phone = ?, Address = ?, CityId = ?, StateId = ?, CountryId = ?, PIN = ?,
					PromotionCode = ?, PromoCodeId = ?, PaymentModeId = ?, PaymentTransId = ?, SignupDt = ?, source = ?, userpointsid = ?, referralcode = ?, ucode = ?";
				
			if ($EditedRecord)
			{
				$myQuery = "UPDATE " . $this->TableNm . " SET " . $myQuery . " WHERE Id = ?";
			}
			else	//New Record: Insert
			{
				$myQuery = "INSERT INTO " . $this->TableNm . " SET " . $myQuery;
			}

			$stmt = $Globali->dbconn->stmt_init();    // Create a statement object

			$Success = $stmt->prepare($myQuery);    // Prepare the statement for execution
			if (! $Success) throw new Exception("Statement couldn't be prepared. Error: " . $Globali->dbconn->error);


			if ($EditedRecord)
			{
				$Success = $stmt->bind_param("iiidddddissssiiissiississss", $this->UserID , $this->EventId , $this->Qty , $this->Fees , $this->Ccharge,$this->STax,$this->DAmount,$this->referralDAmount,$this->CurrencyId , $this->Name, $this->EMail, $this->Phone, $this->Address, $this->CityId , $this->StateId , $this->CountryId , $this->PIN, $this->PromotionCode, $this->PromoCodeId, $this->PaymentModeId, $this->PaymentTransId, $this->SignupDt,   $this->source,$this->userPointsId,$this->referralCode,$this->ucode,$this->Id);    // Bind the parameters
			}
			else
			{
			
				$Success = $stmt->bind_param("iiidddddissssiiissiissssss", $this->UserID , $this->EventId , $this->Qty , $this->Fees , $this->Ccharge,$this->STax,$this->DAmount,$this->referralDAmount, $this->CurrencyId , $this->Name, $this->EMail, $this->Phone, $this->Address, $this->CityId , $this->StateId , $this->CountryId , $this->PIN, $this->PromotionCode, $this->PromoCodeId, $this->PaymentModeId, $this->PaymentTransId, $this->SignupDt, $this->source,$this->userPointsId,$this->referralCode,$this->ucode);
		  // Bind the parameters
			}

			if (! $Success) throw new Exception("Parameters couldn't be bound. Error: " . $Globali->dbconn->error);


			$Success = $stmt->execute();		//Execute Statement
			if (! $Success) throw new Exception("Statement couldn't be Executed. Error: " . $Globali->dbconn->error);

			$AffectedRows = $stmt->affected_rows;
			if ($AffectedRows > 0)
			{
				if (! $EditedRecord)	$this->Id = $Globali->dbconn->insert_id;
			}
			else
			{
				$this->Id = 0;
			}

			$Globali->dbconn->close();
			$stmt->close();

			return $this->Id;
		}
		catch (Exception $Ex)
		{
			throw $Ex;
		}
	}		//Save

	//---------------------------------------------------------------------------------------------------------------

	public function Load()
	{
		$Success = FALSE;

		try
		{
			$Globali=new cGlobali();
			//$Globali->dbconn = new mysqli($Global->DBServerNameOnly, $Global->DBUserName,$Global->DBPassword,$Global->DBIniCatalog,$Global->portNumber);
			//$Globali->dbconn->connect();


			if ($Globali->dbconn->errno > 0)
			{
				throw new Exception("Could not connect to DB. Error: " . $Globali->dbconn->error);
			}

			if (!$Globali->dbconn)
			{
				throw new Exception("Could not connect to DB");
			}

			//echo $this->Id;

			$myQuery="SELECT Id, UserID, EventId, Qty, Fees, Ccharge, STax, DAmount, CurrencyId, Name, EMail, Phone, Address, CityId, StateId, CountryId, PIN, PromotionCode, PromoCodeId, PaymentModeId, PaymentTransId, SignupDt, source  FROM " . $this->TableNm . " WHERE Id = ?";
			$stmt = $Globali->dbconn->stmt_init();    // Create a statement object

			$Success = $stmt->prepare($myQuery);    // Prepare the statement for execution
			if (! $Success) throw new Exception("Statement couldn't be prepared. Error: " . $Globali->dbconn->error);

			$Success = $stmt->bind_param("i", $this->Id);    // Bind the parameters
			if (! $Success) throw new Exception("Parameters couldn't be bound. Error: " . $Globali->dbconn->error);

			$Success = $stmt->execute();		//Execute Statement
			if (! $Success) throw new Exception("Statement couldn't be Executed. Error: " . $Globali->dbconn->error);

			$Success = $stmt->bind_result($this->Id , $this->UserID , $this->EventId , $this->Qty , $this->Fees , $this->Ccharge, $this->STax, $this->DAmount, $this->CurrencyId , $this->Name, $this->EMail, $this->Phone, $this->Address, $this->CityId , $this->StateId , $this->CountryId , $this->PIN, $this->PromotionCode, $this->PromoCodeId, $this->PaymentModeId, $this->PaymentTransId, $this->SignupDt, $this->source);	// Bind the result parameters

			if ($stmt->fetch())		//Fetch values actually into bound fields of the result
			{
				$Success = TRUE;
			}
			else
			{
				$Success = FALSE;
			}

			$Globali->dbconn->close();
			$stmt->close();

			return $Success;
		}
		catch (Exception $Ex)
		{
			throw $Ex;
		}
	}

	//----------------------------------------------------------------------------------------------------

	public function Delete()
	{
		$Success = FALSE;

		try
		{
			$Globali=new cGlobali();
			//$Globali->dbconn = new mysqli($Global->DBServerNameOnly, $Global->DBUserName,$Global->DBPassword,$Global->DBIniCatalog,$Global->portNumber);
			//$Globali->dbconn->connect();


			if ($Globali->dbconn->errno > 0)
			{
				throw new Exception("Could not connect to DB. Error: " . $Globali->dbconn->error);
			}

			if (!$Globali->dbconn)
			{
				throw new Exception("Could not connect to DB");
			}

			$myQuery="DELETE FROM " . $this->TableNm . " WHERE Id = ?";

			$stmt = $Globali->dbconn->stmt_init();    // Create a statement object

			$Success = $stmt->prepare($myQuery);    // Prepare the statement for execution
			if (! $Success) throw new Exception("Statement couldn't be prepared. Error: " . $Globali->dbconn->error);


			$Success = $stmt->bind_param("i", $this->Id);    // Bind the parameters
			if (! $Success) throw new Exception("Parameters couldn't be bound. Error: " . $Globali->dbconn->error);


			$Success = $stmt->execute();		//Execute Statement
			if (! $Success) throw new Exception("Statement couldn't be Executed. Error: " . $Globali->dbconn->error);

			$AffectedRows = $stmt->affected_rows;
			if ($AffectedRows > 0)
			{
				$Success = TRUE;
			}
			else
			{
				$Success = FALSE;
			}

			$Globali->dbconn->close();
			$stmt->close();

			return $Success;
		}
		catch (Exception $Ex)
		{
			throw $Ex;
		}
	}		//Delete
       
        //function to fetch different transactions count
            function getTransactionsByEventId($eventid)
            {
                    $Globali=new cGlobali();
					
					
					//taking care of old transactions	
					if (strtolower($_SERVER['HTTP_HOST'])=='stage.meraevents.com' || strtolower($_SERVER['HTTP_HOST'])=='stage.meraevents.com:8674') {
						$sqlAdd=" IF(es.Id>137214,estd.Discount,(es.DAmount+es.referralDAmount)) 'normalDiscount',
								IF(es.Id>137214,IF(estd.TicketAmt=0,0,((estd.TicketAmt+estd.ServiceTax-estd.Discount-estd.BulkDiscount-estd.ReferralDiscount)/estd.NumOfTickets)),IF(estd.TicketAmt=0,0,(es.fees - (es.Ccharge/es.Qty)))) 'Paid' ,";
					}
					else{
						$sqlAdd=" IF(es.Id>151909,estd.Discount,(es.DAmount+es.referralDAmount)) 'normalDiscount',
								IF(es.Id>151909,IF(estd.TicketAmt=0,0,((estd.TicketAmt+estd.ServiceTax-estd.Discount-estd.BulkDiscount-estd.ReferralDiscount)/estd.NumOfTickets)),IF(estd.TicketAmt=0,0,(es.fees - (es.Ccharge/es.Qty)))) 'Paid' ,";
					}
				
					//taking care of old transactions	

//                 $sqlcount="select s.Id,estd.NumOfTickets as Qty,if(estd.TicketAmt=0,0,((estd.TicketAmt+s.STax)/estd.NumOfTickets)) as Fees,s.PaymentModeId,s.PaymentTransId,s.PaymentGateway,s.eChecked,s.PaymentStatus
//                                from
//            eventsignupticketdetails as estd 
//            Inner Join EventSignup s on s.Id=estd.eventsignupid
//             where  s.EventId='".$Globali->dbconn->real_escape_string($eventid)."'";
                    $sqlcount=" select es.id 'EventSIgnupId',                          
       es.SignupDt 'Signup Date',es.PaymentGateway,
              CASE WHEN paymentgateway='CashonDelivery' THEN 'Cash on Delivery'
                   WHEN PaymentModeId=2 and PaymentTransId='A1' THEN ch.chqno
          ELSE es.PaymentTransId 
          END 'PaymentTransId', 
       es.PromotionCode 'PromotionCode',
       CASE es.eChecked WHEN 'Verified' THEN 'Successful' 
          ELSE 'Pending' 
          End 'PaymentStatus',
       a.name 'Name' ,
	   a.Id 'attendeeId',	   
es.CityId,es.StateId,
       a.field1,
       a.field2,
       a.field3,
       a.field4,
       estd.NumOfTickets as Qty,
       a.Email 'Email', es.Fees,es.PaymentModeId,
       a.company 'Company',
       a.Phone 'Phone', '' Mobile,
       ".$sqlAdd."
t.name,(estd.TicketAmt/estd.NumOfTickets) 'Amount'      
FROM Attendees as a 
            Inner Join EventSignup as es on a.EventSignupId=es.Id
            Inner Join eventsignupticketdetails estd on a.eventsignupid=estd.eventsignupid
            Inner Join tickets t on t.id=estd.ticketid 
            Left Outer Join ChqPmnts ch on es.id=ch.eventsignupid
            
    WHERE  es.EventId= '".$Globali->dbconn->real_escape_string($eventid)."'
        and ((es.paymentgateway='CashonDelivery') or es.paymenttransid!='A1' or (es. PaymentModeId=2 and PaymentTransId='A1' and es.echecked='Verified')   or es.Fees=0)
        and es.eChecked!='Canceled'
        and es.eChecked!='Refunded'
        and a.ticketid=estd.ticketid
        
     order by es.id desc";
                    $ResCount = $Globali->SelectQuery($sqlcount);
                    //print_r($ResCount);
                    $totCount=count($ResCount);
                    $codc=0;$cardc=0;$freec=0;$incc=0;$totc=0;
                    for($i=0;$i<$totCount;$i++)
                    {
//                            if($ResCount[$i]['PaymentTransId']=='A1' && $ResCount[$i]['PaymentGateway']=='CashonDelivery' && $ResCount[$i]['PaymentModeId']==2 && $ResCount[$i]['eChecked']!='Canceled')
//                            $codc=$codc+$ResCount[$i]['Qty'];
//                            elseif($ResCount[$i]['PaymentModeId']==1 && $ResCount[$i]['PaymentTransId']!='A1' && $ResCount[$i]['Fees']!=0)
//                            $cardc=$cardc+$ResCount[$i]['Qty'];
//                            elseif($ResCount[$i]['Fees']==0 && $ResCount[$i]['PaymentStatus']=='Successful Transaction')
//                            $freec=$freec+$ResCount[$i]['Qty'];
//                            else		
//                            $incc=$incc+$ResCount[$i]['Qty'];	
                        //$list_row['PaymentGateway'] != 'CashonDelivery' && $list_row['PaymentModeId'] != 2 
                        if ($ResCount[$i]['PaymentModeId'] == 2 && $ResCount[$i]['PaymentGateway'] == 'CashonDelivery' && $ResCount[$i]['Paid'] != 0)
                            $codc=$codc+1;
                        else if($ResCount[$i]['Paid'] != 0  && $ResCount[$i]['PaymentGateway'] == 'EBS' && $ResCount[$i]['PaymentModeId'] == 1) {
                            $cardc=$cardc+1;
                        }
                        else if($ResCount[$i]['Paid'] == 0)
                            $freec=$freec+1;
                    }
                    $totc=$freec+$cardc+$codc;
                    $transCountArr=array('card'=>$cardc,'cod'=>$codc,'free'=>$freec,'all'=>$totc,'incomplete'=>$incc);
                    return $transCountArr;
            }
            
            //function to fetch Incomplete transactions By event id
            function getIncompleteTransactionsByEventId($eventid)
            {
                    $Globali=new cGlobali();

                    $sqlcount="SELECT count( s.Id ) AS fCount,s.*,e.SalesId FROM EventSignup As s,events As e 
                               WHERE s.EventId=e.Id 
                               and ((s.PaymentModeId=1 and s.PaymentTransId='A1') or s.PaymentModeId!=2 or s.PromotionCode ='X' ) and s.Fees!=0 and 
							   s.EMail not in (SELECT DISTINCT  EMail FROM EventSignup WHERE 1 and ((PaymentModeId=1 and PaymentTransId!='A1') or PaymentModeId=2 or PromotionCode !='X') AND EventId='".$Globali->dbconn->real_escape_string($eventid)."'  and DATE(SignupDt)=DATE(s.SignupDt)) AND EventId='".$Globali->dbconn->real_escape_string($eventid)."' AND eStatus='Open'  GROUP BY s.Id,DATE(s.SignupDt) ORDER BY s.Id DESC";
                    $ResCount = $Globali->SelectQuery($sqlcount);
                    return $ResCount;
            }
            

	//---------------------------------------------------------------------------------------------------------------

}		//Class


/* >>>Useful notes>>>
 * >>Bind_Param Types (First Argument)
 • i: All INTEGER types
 • d: The DOUBLE and FLOAT types
 • b: The BLOB types
 • s: All other types (including strings)
 * <<Bind_Param Types<<
 *
 *
 */

?>
>>>>>>> 3.1.1
